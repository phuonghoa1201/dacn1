
const express = require("express");
const axios = require("axios");
const { Product } = require("../models/product"); // ƒê·∫£m b·∫£o ƒë√∫ng ƒë∆∞·ªùng d·∫´n t·ªõi model c·ªßa b·∫°n
const chatRouter = express.Router();


const GEMINI_API_KEY = "AIzaSyBaelXTrgDlNzn-usvo5ioEv4xIegBFLTY";
const GEMINI_API_URL = "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro:generateContent";


const introPrompt = `
B·∫°n l√† nh√¢n vi√™n chƒÉm s√≥c kh√°ch h√†ng th√¢n thi·ªán t·∫°i TechZone. D∆∞·ªõi ƒë√¢y l√† m·ªôt s·ªë s·∫£n ph·∫©m ƒëang c√≥ s·∫µn trong c·ª≠a h√†ng:


`;


// POST /chat
chatRouter.post("/chat", async (req, res) => {
 const userMessage = req.body.message;


 if (!userMessage) {
   return res.status(400).json({ error: "Tin nh·∫Øn kh√¥ng h·ª£p l·ªá" });
 }


try {
    // üîç L·∫•y 10 s·∫£n ph·∫©m m·ªõi nh·∫•t t·ª´ c∆° s·ªü d·ªØ li·ªáu
    const products = await Product.find().sort({ _id: -1 }).limit(10);


    if (products.length === 0) {
      return res.status(404).json({ error: "Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m n√†o." });
    }


    const productDescriptions = products.map(p => {
      // Ki·ªÉm tra xem s·∫£n ph·∫©m c√≥ ·∫£nh kh√¥ng, n·∫øu kh√¥ng th√¨ g√°n gi√° tr·ªã m·∫∑c ƒë·ªãnh
      const imageUrl = p.images.length > 0 ? p.images[0] : 'https://yourdomain.com/default-image.jpg';


      return `- ${p.name} [${p.category}]
        Gi√°: ${p.price.toLocaleString("vi-VN")} VNƒê
        ${p.description}
//         Link: https://yourdomain.com/products/${p._id}
        H√¨nh ·∫£nh: ${imageUrl}`;  // Bao g·ªìm c·∫£ URL h√¨nh ·∫£nh
    }).join("\n\n");


    // T·∫°o prompt ho√†n ch·ªânh cho chatbot
    const fullPrompt = `${introPrompt}${productDescriptions}


H√£y h·ªó tr·ª£ kh√°ch h√†ng d·ª±a tr√™n danh s√°ch tr√™n. N·∫øu h·ªç ch∆∞a r√µ, b·∫°n c√≥ th·ªÉ h·ªèi th√™m ƒë·ªÉ t∆∞ v·∫•n ph√π h·ª£p.`;


   // G·ª≠i y√™u c·∫ßu ƒë·∫øn Gemini API ƒë·ªÉ l·∫•y ph·∫£n h·ªìi t·ª´ chatbot
   const response = await axios.post(
     `${GEMINI_API_URL}?key=${GEMINI_API_KEY}`,
     {
       contents: [
         {
           role: "user",
           parts: [
             { text: fullPrompt },
             { text: userMessage }
           ]
         }
       ]
     },
     {
       headers: {
         "Content-Type": "application/json"
       }
     }
   );


   // L·∫•y ph·∫£n h·ªìi t·ª´ Gemini API
   const botReply = response.data.candidates?.[0]?.content?.parts?.[0]?.text || "Xin l·ªói, m√¨nh ch∆∞a th·ªÉ tr·∫£ l·ªùi.";
   res.json({ reply: botReply });


 } catch (err) {
   console.error("L·ªói khi g·ªçi Gemini API:", err.response?.data || err.message);


   if (err.response?.status === 400) {
     return res.status(400).json({ error: "Y√™u c·∫ßu kh√¥ng h·ª£p l·ªá t·ª´ Gemini API" });
   } else if (err.response?.status === 500) {
     return res.status(500).json({ error: "L·ªói h·ªá th·ªëng t·ª´ Gemini API" });
   } else {
     return res.status(500).json({ error: "L·ªói h·ªá th·ªëng, vui l√≤ng th·ª≠ l·∫°i sau." });
   }
 }
});


module.exports = chatRouter;
